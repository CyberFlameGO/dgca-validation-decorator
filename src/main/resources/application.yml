identity:
  protocol: DCCVALIDATION
  protocolVersion: 1.0.0
  #### serviceIdentity
  serviceIdentityUrl: https://validation-decorator.example
  #### validationIdentity
  validationIdentityUrl: https://validation-decorator.example/identity
  consent: I want to check your DCC to confirm your booking! :)
  servicePovider: Service Provider.com
  restTemplate:
    connectionTimeout: 3000
    readTimeout: 3000

booking:
  urls:
    boardingPass: http://localhost:8082/boardingpass/{subject}
    tokenContent: http://localhost:8082/tokencontent/{subject}
    result: http://localhost:8082/result/{subject}

validation:
  urls:
    identity: http://localhost:8081/identity
    initialize: http://localhost:8081/initialize/{subject}
    status: http://localhost:8081/status/{subject}
    validate: http://localhost:8081/validate/{subject}



#### Create Key: keytool -genkey -alias [ALIAS NAME] -keyalg EC -validity 3650 -keystore dev-decorator.jks -storetype JKS
dgc:
  businessRulesDownload:
    timeInterval: 1800000
    lockLimit: 3600000
  certificatesDownloader:
    timeInterval: 1800000
    lockLimit: 3600000
  valueSetsDownload:
    timeInterval: 1800000
    lockLimit: 3600000
  serviceUrl: http://localhost:8080
  #keyStoreFile: certs/dev-decorator.jks
  #keyStorePassword: changeMe
  #privateKeyPassword: changeMe
  keyStoreFile: certs/dev-test.jks
  keyStorePassword: dcc
  privateKeyPassword: dcc
  activeSignKey: validationservicesignkey
  encAliases: 
    #- validationdecoratorenckey
    - validationserviceenckey
  signAliases: 
    #- validationdecoratorsignkey
    - validationservicesignkey
  token:
    provider: config
    issuer: Validation Decorator Dervice
    type: JWT
    algorithm: ES
    keysize: 256
    validity: 3600 #### in seconds. Expiration is calculated
    publicKey: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEIPrtYsW9+Juwp/mt7h8FJ3LgFRIUl2Vlmcl1DUm5gNHl0LnHIL4Jff6mg6yVhehdQiMvkhUtTvmFIUWONSJEnw==
    privateKey: MEECAQAwEwYHKoZIzj0CAQYIKoZIzj0DAQcEJzAlAgEBBCBSuPIbykwH24sjQsTneeN6EyjiA1NK5W7uca+HxmGmWw==
    keyAlgorithm: EC
  services:
    - id: http://localhost:8080/token
      type: AccessCredentialService
      serviceEndpoint: http://localhost:8080/token
      name: Validation Decorator Token
    - id: http://localhost:8081/initialize
      type: ValidationService
      serviceEndpoint: http://localhost:8081/initialize
      name: Validation Service Initialize

server:
  port: 8080

spring:
  application:
    name: dgca-validation-decorator
  profiles:
    active: keys

management:
  endpoint:
    info:
      enabled: true
    health:
      enabled: true
  endpoints:
    enabled-by-default: false
    web:
      base-path: /management
      exposure:
        include: info,health

springdoc:
  api-docs:
    path: /api/docs
    enabled: true
  swagger-ui:
    path: /swagger
